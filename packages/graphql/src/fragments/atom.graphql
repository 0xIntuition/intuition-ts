fragment AtomValue on atoms {
  value {
    person {
      name
      image
      description
      url
    }
    thing {
      name
      image
      description
      url
    }
    organization {
      name
      image
      description
      url
    }
  }
}

fragment AtomMetadata on atoms {
  id
  data
  image
  label
  emoji
  type
  walletId
  ...AtomValue
}

fragment AtomTxn on atoms {
  blockNumber
  blockTimestamp
  transactionHash
  creatorId
}

fragment AtomVaultDetails on atoms {
  vaultId
  walletId
  vault {
    positionCount
    totalShares
    positions_aggregate {
      aggregate {
        count
        sum {
          shares
        }
      }
    }
    positions {
      id
      account {
        label
        id
      }
      shares
    }
  }
}

fragment AtomTriple on atoms {
  asSubject {
    id
    label
    object {
      data
      id
      image
      label
      emoji
      type
      creator {
        ...AccountMetadata
      }
    }
    predicate {
      data
      id
      image
      label
      emoji
      type
      creator {
        ...AccountMetadata
      }
    }
  }
  asPredicate {
    id
    label
    subject {
      data
      id
      image
      label
      emoji
      type
      creator {
        ...AccountMetadata
      }
    }
    object {
      data
      id
      image
      label
      emoji
      type
      creator {
        ...AccountMetadata
      }
    }
  }
  asObject {
    id
    label
    subject {
      data
      id
      image
      label
      emoji
      type
      creator {
        ...AccountMetadata
      }
    }
    predicate {
      data
      id
      image
      label
      emoji
      type
      creator {
        ...AccountMetadata
      }
    }
  }
}

fragment AtomVaultDetailsWithPositions on atoms {
  vault {
    totalShares
    currentSharePrice
    positions_aggregate(where: { accountId: { _in: $addresses } }) {
      aggregate {
        sum {
          shares
        }
      }
      nodes {
        account {
          id
        }
        shares
      }
    }
  }
}
