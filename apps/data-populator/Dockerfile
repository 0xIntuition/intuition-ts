FROM docker.io/node:lts-alpine as base

ARG PINATA_JWT_KEY
ARG PINATA_GATEWAY_KEY
ARG IPFS_GATEWAY
ARG ATTEST_CONTRACT_ADDRESS
ARG ATTEST_CONTRACT_ADDRESS_DEV
ARG MULTIVAULT_CONTRACT_ADDRESS
ARG MULTIVAULT_CONTRACT_ADDRESS_DEV
ARG PRIVATE_KEY
ARG PRIVATE_KEY_DEV
ARG EVM_RPC
ARG EVM_RPC_DEV
ARG ADDITIONAL_STAKE_ATOM
ARG ADDITIONAL_STAKE_TRIPLE
ARG CLOUDINARY_CLOUD_NAME
ARG CLOUDINARY_API_KEY
ARG CLOUDINARY_API_SECRET
ARG SUPABASE_URL
ARG SUPABASE_KEY
ARG ENVIRONMENT
ARG MULTIVAULT_ADDRESS_BASE_SEPOLIA
ARG MULTIVAULT_ADDRESS_BASE_MAINNET
ARG ALCHEMY_MAINNET_API_KEY
ARG ALCHEMY_API_KEY
ARG ALCHEMY_MAINNET_RPC_URL
ARG ALCHEMY_OP_SEPOLIA_RPC_URL
ARG ALCHEMY_BASE_SEPOLIA_RPC_URL
ARG ALCHEMY_BASE_RPC_URL
ARG WALLETCONNECT_PROJECT_ID
ARG SESSION_SECRET
ARG API_URL
ARG API_KEY
ARG AWS_SECRET_KEY
ARG AWS_ACCESS_KEY
ARG STORAGE_REGION
ARG STORAGE_BUCKET
ARG ADMIN_PRIVATE_KEY
ARG CLAIMR_AUTH_TOKEN
ARG CLAIMR_CAMPAIGN_ID
ARG ORIGIN_URL
ARG PRIVY_APP_ID
ARG PRIVY_AUTH_URL
ARG PRIVY_APP_SECRET
ARG SENTRY_AUTH_TOKEN
ARG SENTRY_DSN
ARG SENTRY_ORG
ARG SENTRY_PROJECT
ARG VITE_DEPLOY_ENV
ARG FF_FULL_LOCKDOWN_ENABLED
ARG FF_INCIDENT_BANNER_ENABLED
ARG FF_GENERIC_BANNER_ENABLED

ENV PINATA_JWT_KEY=${PINATA_JWT_KEY}
ENV PINATA_GATEWAY_KEY=${PINATA_GATEWAY_KEY}
ENV IPFS_GATEWAY=${IPFS_GATEWAY}
ENV ATTEST_CONTRACT_ADDRESS=${ATTEST_CONTRACT_ADDRESS}
ENV ATTEST_CONTRACT_ADDRESS_DEV=${ATTEST_CONTRACT_ADDRESS_DEV}
ENV MULTIVAULT_CONTRACT_ADDRESS=${MULTIVAULT_CONTRACT_ADDRESS}
ENV MULTIVAULT_CONTRACT_ADDRESS_DEV=${MULTIVAULT_CONTRACT_ADDRESS_DEV}
ENV PRIVATE_KEY=${PRIVATE_KEY}
ENV PRIVATE_KEY_DEV=${PRIVATE_KEY_DEV}
ENV EVM_RPC=${EVM_RPC}
ENV EVM_RPC_DEV=${EVM_RPC_DEV}
ENV ADDITIONAL_STAKE_ATOM=${ADDITIONAL_STAKE_ATOM}
ENV ADDITIONAL_STAKE_TRIPLE=${ADDITIONAL_STAKE_TRIPLE}
ENV CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
ENV CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
ENV CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
ENV SUPABASE_URL=${SUPABASE_URL}
ENV SUPABASE_KEY=${SUPABASE_KEY}
ENV ENVIRONMENT=${ENVIRONMENT}
ENV MULTIVAULT_ADDRESS_BASE_SEPOLIA=${MULTIVAULT_ADDRESS_BASE_SEPOLIA}
ENV MULTIVAULT_ADDRESS_BASE_MAINNET=${MULTIVAULT_ADDRESS_BASE_MAINNET}
ENV ALCHEMY_MAINNET_API_KEY=${ALCHEMY_MAINNET_API_KEY}
ENV ALCHEMY_API_KEY=${ALCHEMY_API_KEY}
ENV ALCHEMY_MAINNET_RPC_URL=${ALCHEMY_MAINNET_RPC_URL}
ENV ALCHEMY_OP_SEPOLIA_RPC_URL=${ALCHEMY_OP_SEPOLIA_RPC_URL}
ENV ALCHEMY_BASE_SEPOLIA_RPC_URL=${ALCHEMY_BASE_SEPOLIA_RPC_URL}
ENV ALCHEMY_BASE_RPC_URL=${ALCHEMY_BASE_RPC_URL}
ENV WALLETCONNECT_PROJECT_ID=${WALLETCONNECT_PROJECT_ID}
ENV SESSION_SECRET=${SESSION_SECRET}
ENV API_URL=${API_URL}
ENV API_KEY=${API_KEY}
ENV AWS_SECRET_KEY=${AWS_SECRET_KEY}
ENV AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
ENV STORAGE_REGION=${STORAGE_REGION}
ENV STORAGE_BUCKET=${STORAGE_BUCKET}
ENV ADMIN_PRIVATE_KEY=${ADMIN_PRIVATE_KEY}
ENV CLAIMR_AUTH_TOKEN=${CLAIMR_AUTH_TOKEN}
ENV CLAIMR_CAMPAIGN_ID=${CLAIMR_CAMPAIGN_ID}
ENV ORIGIN_URL=${ORIGIN_URL}
ENV PRIVY_APP_ID=${PRIVY_APP_ID}
ENV PRIVY_AUTH_URL=${PRIVY_AUTH_URL}
ENV PRIVY_APP_SECRET=${PRIVY_APP_SECRET}
ENV SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN}
ENV SENTRY_DSN=${SENTRY_DSN}
ENV SENTRY_ORG=${SENTRY_ORG}
ENV SENTRY_PROJECT=${SENTRY_PROJECT}
ENV VITE_DEPLOY_ENV=${VITE_DEPLOY_ENV}
ENV FF_FULL_LOCKDOWN_ENABLED=${FF_FULL_LOCKDOWN_ENABLED}
ENV FF_INCIDENT_BANNER_ENABLED=${FF_INCIDENT_BANNER_ENABLED}
ENV FF_GENERIC_BANNER_ENABLED=${FF_GENERIC_BANNER_ENABLED}

WORKDIR /app

COPY package.json \
    project.json \
	tsconfig* \
	nx.json \
	pnpm*.yaml \
    .eslintrc.base.cjs \
    .verdaccio \
	./
COPY apps/portal ./apps/portal
COPY packages ./packages

RUN apk add --no-cache \
	python3 \
	make \
	gcc \
	g++

RUN npm install -g pnpm@9.0.6

FROM base as build
RUN npm add --global nx@latest
RUN pnpm i
RUN pnpm run portal:build

FROM base
COPY --from=build /app /app
ENV NX_REJECT_UNKNOWN_LOCAL_CACHE=0
ENV PORT=8080
ENV HOST=0.0.0.0

EXPOSE 8080
CMD [ "pnpm", "run", "portal:start" ]